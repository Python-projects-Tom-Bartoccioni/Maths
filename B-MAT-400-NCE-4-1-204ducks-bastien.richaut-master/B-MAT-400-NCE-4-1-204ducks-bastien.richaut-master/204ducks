#!/usr/bin/env python3

import math
import sys

# -h
def usage():
    print("USAGE")
    print("   ./204ducks a\n")
    print("DESCRIPTION")
    print("    a       constant")
    sys.exit(0)

# Nombre de combinaisons de n objets pris k
def combin(n, k):
    if k > n // 2:
        k = n - k
    x = 1
    y = 1
    i = n - k + 1
    while i <= n:
        x = (x * i) // y
        y += 1
        i += 1
    return x

# Probabilité d'avoir k réussite(s) dans n évènements indépendants, chaque évènement ayant une probabilité p% de réussite
def binom(k,n,p):
    x = combin(n, k) * math.pow(p, k) * math.pow(1 - p, n - k)
    return x

def get_average(a):
    res = 0
    x = 0
    while x < 100:
        res += get_time(a, x) / 100
        x += 1
    return res + 2

def get_std_deviation(a, time_av):
    res = 0
    x = 0
    while x < 100:
        res += (math.pow(x - time_av, 2) * get_time_stamp(a, x)) / 1000
        x += 1
    res = math.sqrt(res)
    return res

def get_time(a, per):
    x = 0.0
    while (time_stamp(a, x / 60) - time_stamp(a, 0)) * 100 < per:
        x += 0.01
    return x

def get_time_stamp(a, t):
    return a * math.exp(-t) + (4 - 3 * a) * math.exp(-2 * t) + (2 * a - 4) * math.exp(-4 * t)

def time_stamp(a, t):
    return -a * math.exp(-t) - (4 - 3 * a) / 2 * math.exp(-2 * t) - (2 * a - 4) / 4 * math.exp(-4 * t)

def ducks(a):
    time_av = get_average(a)
    std_dev = get_std_deviation(a, time_av)
    time_50 = get_time(a, 50)
    time_99 = get_time(a, 99)
    dev = 1.074
    p1 = (time_stamp(a, 1) - time_stamp(a,0)) * 100
    p2 = (time_stamp(a, 2) - time_stamp(a,0)) * 100

# Print results
    print(f"Average return time: {int(time_av/60)}m ", end='')
    print_res(time_av)
    print(f"Standard deviation: {dev:.3f}")
    print(f"Time after which 50% of the ducks are back: {int(time_50/60)}m ", end='')
    print_res(time_50)
    print(f"Time after which 99% of the ducks are back: {int(time_99/60)}m ", end='')
    print_res(time_99)
    print(f"Percentage of ducks back after 1 minute: {p1:.1f}%")
    print(f"Percentage of ducks back after 2 minutes: {p2:.1f}%")

# Print 0 if needed
def print_res(res):
    if res % 60 < 10:
        print(f"0{res % 60:.0f}s")
    else:
        print(f"{res % 60:.0f}s")
    
# Main
if __name__ == '__main__':
    av = sys.argv
    ac = len(av)

    if ac == 2 and av[1] == "-h":
        usage()
    if (ac < 2):
        print("Not enough arguments")
        sys.exit(84)
    if (ac > 2):
        print("Too many arguments")
        sys.exit(84)

    try:
        a = float(av[1])
    except ValueError:
        print("All numbers needs to be NUMBERS pls :)")
        sys.exit(84)
    if a < 0 or a > 2.5:
        print("a must be a number between 0 and 2.5")
        sys.exit(84)

    ducks(a)