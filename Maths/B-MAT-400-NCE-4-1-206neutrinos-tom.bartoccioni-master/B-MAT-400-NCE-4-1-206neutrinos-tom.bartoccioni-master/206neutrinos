#!/usr/bin/env python3

import math
import sys

# -h
def usage():
    print("USAGE")
    print("   ./205IQ u s [IQ1] [IQ2]\n")
    print("DESCRIPTION")
    print("    a       constant")
    sys.exit(0)

def neutrinos(a, b, c, d):
    # Initialisation des valeurs
    nb_val = a
    ar_mean = b
    h_mean = c
    std_dev = d
    root_mean = 0

    # While Input != 'END"
    while (1):
        input_v = input("Enter Next Value: ")
        if input_v == "END":
            exit(0)
        try:
            input_int = int(input_v)
        except ValueError:
            print ("Input Value must be 'END' or a number")
            sys.exit(84)
        if input_int < 0:
            print ("Input Value must be > 0")
            sys.exit(84)
        
        tmp = ((math.pow(std_dev, 2) + math.pow(ar_mean, 2)) * nb_val)

        # Calculs des nouvelles valeurs
        try:
            nb_val = nb_val + 1
            ar_mean = ((nb_val - 1) * ar_mean + input_int) / nb_val
            h_mean = nb_val / ((1 / input_int) + ((nb_val - 1) / h_mean))
            root_mean = math.sqrt((tmp + math.pow(input_int, 2)) / nb_val)
            std_dev = math.sqrt(math.pow(root_mean, 2) - math.pow(ar_mean, 2))
        except:
            print ("Division by 0")
            sys.exit(84)

        # Print des valeurs
        print (f"    Number of values:\t{nb_val}")
        print (f"    Standard deviation:\t{std_dev:.2f}")
        print (f"    Arithmetic mean:\t{ar_mean:.2f}")
        print (f"    Root mean square:\t{root_mean:.2f}")
        print (f"    Harmonic mean:\t{h_mean:.2f}")
        print ("")

# Main
if __name__ == '__main__':
    av = sys.argv
    ac = len(av)

    if ac == 2 and av[1] == "-h":
        usage()
    if (ac < 5):
        print("Not enough arguments")
        sys.exit(84)
    if ac > 5:
        print("Too Many Arguments")
        sys.exit(84)

    try:
        a = int(av[1])
        b = int(av[2])
        c = int(av[3])
        d = int(av[4])
    except ValueError:
        print("All numbers needs to be NUMBERS pls :)")
        sys.exit(84)
    if a < 0:
        print("Number of values can't be negative")
        sys.exit(84)
    
    neutrinos(a, b, c, d)